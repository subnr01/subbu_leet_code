=============================================================

Graph basics:

Graph is a data structure that consists of two components:
1. Finite set of vertices called nodes.
2. A finites set of ordered pair of the form (u,v) called edges 
   that connect two vertices.
   

There are two common representations of Graphs:
1. Adjacency matrix
2. Adjacency list

Adjacency matrix is a 2D matrix of size V*V where V is the number of
vertices in the graph.
Pros: Representation is easier to implement and follow. Removing an edge takes O(1) time. 
Queries like whether there is an edge from vertex ‘u’ to vertex ‘v’ are efficient and can be done O(1).
Cons: Consumes more space O(V^2). Even if the graph is sparse(contains less number of edges), 
it consumes the same space. Adding a vertex is O(V^2) time.


Adjacency list is where an array of linked lists is used. The size of the array
is equal to the number of vertices. This representation is useful in storing 
weighted representation of a graphs. 
Pros: Saves space O(|V|+|E|) . In the worst case, 
there can be C(V, 2) number of edges in a graph thus consuming O(V^2) space. 
Adding a vertex is easier.
Cons: Queries like whether there is an edge from vertex u to vertex v are not 
efficient and can be done O(V).

Graphs and Trees: A graph can contain a cycle unlike a tree. Simply put
a tree is a graph without a cycle. Since a graph can contain a cycle, we
use the visited array to keep track of visited vertices.

BFS: It is an algorithm that for traversing or searching tree or graph data structures. 
It starts at the tree root (or some arbitrary node of a graph, sometimes referred 
to as a 'search key'[1]) and explores the neighbor nodes first, 
before moving to the next level neighbours.



=============================================================

(1) A tree is an undirected graph in which any two vertices are
connected by exactly one path.

(2) Any connected graph who has n nodes with n-1 edges is a tree.

(3) The degree of a vertex of a graph is the number of
edges incident to the vertex.

(4) A leaf is a vertex of degree 1. An internal vertex is a vertex of
degree at least 2.

(5) A path graph is a tree with two or more vertices that is not
branched at all.

(6) A tree is called a rooted tree if one vertex has been designated
the root.

(7) The height of a rooted tree is the number of edges on the longest
downward path between root and a leaf.
